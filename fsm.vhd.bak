LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY FSM IS
PORT (
    clk, reset : in std_logic;
    student_id : out std_logic_vector(3 downto 0);
    current_state : out std_logic_vector(2 downto 0)
);
END FSM;

ARCHITECTURE fsm OF FSM IS
    TYPE state_type IS (s0, s1, s2, s3, s4, s5, s6, s7);
    SIGNAL yfsm : state_type;
BEGIN
    PROCESS (clk, reset)
    BEGIN
        IF reset = '1' THEN
            yfsm <= s0;
        ELSIF (clk'EVENT AND clk = '1') THEN
            CASE yfsm IS
                WHEN s0 => yfsm <= s1;
                WHEN s1 => yfsm <= s2;
                WHEN s2 => yfsm <= s3;
                WHEN s3 => yfsm <= s4;
                WHEN s4 => yfsm <= s5;
                WHEN s5 => yfsm <= s6;
                WHEN s6 => yfsm <= s7;
                WHEN s7 => yfsm <= s0;
            END CASE;
        END IF;
    END PROCESS;

    PROCESS (yfsm)
    BEGIN
        CASE yfsm IS
            WHEN s0 => current_state <= "000"; student_id <= "0001"; -- d2 = 1
            WHEN s1 => current_state <= "001"; student_id <= "0010"; -- d3 = 2
            WHEN s2 => current_state <= "010"; student_id <= "0100"; -- d4 = 4
            WHEN s3 => current_state <= "011"; student_id <= "0110"; -- d5 = 6
            WHEN s4 => current_state <= "100"; student_id <= "1001"; -- d6 = 9
            WHEN s5 => current_state <= "101"; student_id <= "0011"; -- d7 = 3
            WHEN s6 => current_state <= "110"; student_id <= "1001"; -- d8 = 9
            WHEN s7 => current_state <= "111"; student_id <= "0000"; -- d9 = 0
        END CASE;
    END PROCESS;
END fsm;